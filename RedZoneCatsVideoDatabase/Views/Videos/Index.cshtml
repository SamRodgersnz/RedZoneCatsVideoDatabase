@model IEnumerable<RedZoneCatsVideoDatabase.Models.VideoSearchViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<table class="table">
    <tr>
        <td>
            <button onclick="toggleSearch()" align="left" class="col-md-2">Search</button>
        </td>
        <td>
            <p align="right" class="col-md-2">@Html.ActionLink("Create New", "Create")</p>
        </td>
    </tr>
</table>

@using (Html.BeginForm("Index", "Videos", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="search-block" style="display: none">
        <h4>Search</h4>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.FirstOrDefault().name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstOrDefault().name, new { htmlAttributes = new { @class = "form-control" }})
                @Html.ValidationMessageFor(model => model.FirstOrDefault().name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstOrDefault().location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstOrDefault().location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstOrDefault().location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstOrDefault().catList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FirstOrDefault().catList, ViewBag.Catlist as MultiSelectList, new { size = 10, multiple = true })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstOrDefault().catBreed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.FirstOrDefault().catBreed, ViewBag.CatBreeds as MultiSelectList, new { size = 10 })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstOrDefault().catSex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstOrDefault().catSex, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstOrDefault().catSex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstOrDefault().catAge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstOrDefault().catAge, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstOrDefault().catAge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<table class="table">
    <tr>
        <th>
            Name
        </th>
        <th>
            Location
        </th>
        <th>
            ContentType
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.location)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.contentType)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.id }) |
            @Html.ActionLink("Details", "Details", new { id=item.id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.id })
        </td>
    </tr>
}

</table>

<script type="text/javascript">
    var searchHidden = true;
    function toggleSearch() {
        if (searchHidden) {
            document.getElementById('search-block').style.display = "block";
            searchHidden = false;
        }
        else {
            document.getElementById('search-block').style.display = "none";
            searchHidden = true;
        }
    };
    $(document).ready(function () {
        $('input[name=name]').val("")
        $('input[name=location]').val("")
        $('option[selected=selected]').removeAttr("selected")
    });
</script>
